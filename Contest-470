 Q 2 : You are given an integer array nums.

Return the length of the longest subsequence in nums whose bitwise XOR is non-zero. If no such subsequence exists, return 0


In this questions three cases arrives 
1. If all elements are zero return 0 (no subsset)
  2. If XOR  of all element is 0 return n-1 (why because then it means all xor are zero but if we take less than all it will not be zero )
3. Return n ( Total XOR is non-zero)


Code : 
class Solution {
public:
    int longestSubsequence(vector<int>& nums) {
        int n = nums.size();
        int xo =0,r=0;      // xor is predefined variable
        for(auto x:nums) xo^=x,r|=x;   //  this r|=x does the or operator which basically check if all the element are 0 or not like a|a =0 a|b = something but not zero
        if(!r) return 0;   
        if(!xo) return n-1;
        return n ;
    }
};
